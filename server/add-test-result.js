const { PrismaClient } = require('@prisma/client');

const prisma = new PrismaClient();

async function addTestResult() {
  try {
    console.log('üîç Adding test result to database...');

    // –°–Ω–∞—á–∞–ª–∞ –Ω–∞–π–¥–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    const user = await prisma.user.findFirst({
      where: {
        email: {
          not: null,
        },
      },
    });

    if (!user) {
      console.log('‚ùå No users found in database');
      return;
    }

    console.log('üë§ Found user:', user.email);

    // –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç
    const testResult = await prisma.testResult.create({
      data: {
        user_id: user.id,
        test_code: 'test1_1',
        variant: 1,
        score: 8,
        total_questions: 10,
        percentage: 80.0,
      },
    });

    console.log('‚úÖ Test result added successfully:', testResult);

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç –¥–æ–±–∞–≤–ª–µ–Ω
    const allResults = await prisma.testResult.findMany({
      include: {
        user: {
          select: {
            email: true,
            fullName: true,
          },
        },
      },
    });

    console.log(`üìä Total test results in database: ${allResults.length}`);
    allResults.forEach((result, index) => {
      console.log(
        `${index + 1}. ${result.user.email} - ${result.test_code} - ${result.score}/${result.total_questions} (${result.percentage}%)`,
      );
    });
  } catch (error) {
    console.error('‚ùå Error adding test result:', error);
  } finally {
    await prisma.$disconnect();
  }
}

addTestResult();
